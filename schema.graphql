type CallExecuted @entity(immutable: true) {
  id: Bytes!
  LowSecTimelock_id: Bytes! # bytes32
  index: BigInt! # uint256
  target: Bytes! # address
  value: BigInt! # uint256
  data: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CallSalt @entity(immutable: true) {
  id: Bytes!
  LowSecTimelock_id: Bytes! # bytes32
  salt: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CallScheduled @entity(immutable: true) {
  id: Bytes!
  LowSecTimelock_id: Bytes! # bytes32
  index: BigInt! # uint256
  target: Bytes! # address
  value: BigInt! # uint256
  data: Bytes! # bytes
  predecessor: Bytes! # bytes32
  delay: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Cancelled @entity(immutable: true) {
  id: Bytes!
  LowSecTimelock_id: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MinDelayChange @entity(immutable: true) {
  id: Bytes!
  oldDuration: BigInt! # uint256
  newDuration: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
